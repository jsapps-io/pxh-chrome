/*------------------------------------*\
    #components.pxh-drawer
\*------------------------------------*/

$pxh-drawer-width-wide: 260px !default; // magic number ... fix this
$pxh-drawer-width-narrow: 60px !default; // magic number ... fix this
$pxh-drawer-margin: 20px !default;
$pxh-drawer-bg-color: $gray10 !default;
$pxh-view-header-height: 61px !default; // locked to current height of px-context-browser

@keyframes pxh-drawer--in {
  0% {
    opacity: 0;
  }
  75% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

// Set the default styles for the wide/open state of the drawer (as seen on mobile).
.pxh-drawer {
  z-index: 750;
  position: fixed;
  top: 0;
  left: 0;
  width: $pxh-drawer-width-wide;
  height: 100%;
  background-color: $pxh-drawer-bg-color;
  transition: all 300ms ease-in-out;
  transition-delay: 0ms;
  .pxh-navigation,
  .pxh-login,
  .pxh-drawer-toggle {
    animation-name: pxh-drawer--in;
    animation-duration: 600ms;
    animation-timing-function: ease-in-out;
    animation-iteration-count: 1;
  }
}

// Keep the inactive drawer hidden off-screen until the @md (tablet) breakpoint.
@include mq($until: md) {
  .pxh-drawer--hidden-until\@md {
    left: ($pxh-drawer-width-wide * -1);
  }
}

// From the @md (tablet) breakpoint and wider,
// the inactive drawer is displayed in its narrow state.
// Remove this class to display the drawer in its wide state.
@include mq($from: md) {
  .pxh-drawer--narrow\@md {
    width: $pxh-drawer-width-narrow;
    transition-delay: 500ms;
  }
}

@include mq($from: lg) {
  .pxh-drawer--wide\@lg {
    width: $pxh-drawer-width-wide;
    transition-delay: 100ms;
  }
}

.pxh-drawer-toggle {
  float: left;
}

.pxh-drawer-toggle__link {
  display: block;
  float: left;
  width: $pxh-drawer-margin * 3;
  height: $pxh-drawer-margin * 3;
  padding: $pxh-drawer-margin;
  color: $white;
  transition: all 500ms ease-in-out;
  &:link,
  &:visited {
    color: $white;
  }
}

.pxh-drawer-toggle__icon {
  fill: $gray7;
}

/*------------------------------------*\
    #pxh-drawer-header
\*------------------------------------*/

// mixin for "animate in" styles
//
// These styles are applied at the end of an entrance animation
// when the element toggles from hidden to visible, or at the
// beginning of an exit animation when the elemenbt toggles from
// visible to hidden.
//
// These styles are also applied to the element when it is visible
// by default, absent an animation.
@mixin pxh-drawer-header__link--in-styles {
  padding-top: $pxh-drawer-margin;
  width: $pxh-drawer-width-wide - ($pxh-drawer-margin * 3);
  font-size: $inuit-base-font-size * 1.25;
  opacity: 1;
  visibility: visible;
}

// mixin for "animate out" styles
//
// These styles are applied at the end of an exit animation
// when the element toggles from visible to hidden, or at the
// beginning of an entrance animation when the element toggles from
// hidden to visible.
//
// These styles are also applied to the element when it is hidden
// by default, absent an animation.
@mixin pxh-drawer-header__link--out-styles {
  margin: 0;
  width: 0;
  font-size: 0;
  opacity: 0;
  visibility: hidden;
}

// keyframes for "animate in" styles
//
// This animation sequence is applied when the element
// toggles from hidden to visible.
@keyframes pxh-drawer-header__link--in {
  0% {
    @include pxh-drawer-header__link--out-styles;
  }
  50% {
    margin: 0;
    width: 0;
    font-size: 0;
    opacity: 0;
    visibility: hidden;
  }
  75% {
    padding-top: $pxh-drawer-margin;
    width: $pxh-drawer-width-wide - ($pxh-drawer-margin * 3);
    font-size: 0;
    opacity: 0;
    visibility: hidden;
  }
  90% {
    padding-top: $pxh-drawer-margin;
    width: $pxh-drawer-width-wide - ($pxh-drawer-margin * 3);
    font-size: $inuit-base-font-size * 1.25;
    opacity: 0;
    visibility: hidden;
  }
  100% {
    @include pxh-drawer-header__link--in-styles;
  }
}

// keyframes for "animate out" styles
//
// This animation sequence is applied when the element
// toggles from visible to hidden.
@keyframes pxh-drawer-header__link--out {
  0% {
    @include pxh-drawer-header__link--in-styles;
  }
  50% {
    padding-top: $pxh-drawer-margin;
    width: $pxh-drawer-width-wide - ($pxh-drawer-margin * 3);
    font-size: $inuit-base-font-size * 1.25;
    opacity: 0;
    visibility: visible;
  }
  99% {
    font-size: 0;
    opacity: 0;
    visibility: visible;
  }
  100% {
    @include pxh-drawer-header__link--out-styles;
  }
}

.pxh-drawer-header {
  float: left;
  margin: 0;
  padding: 0;
  font-weight: normal;
}

.pxh-drawer-header__link {
  @include pxh-drawer-header__link--in-styles;
  @include pxh-animation(pxh-drawer-header__link--in);
  display: block;
  text-decoration: none;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@include mq($from: md) {
  .pxh-drawer-header__link--narrow\@md {
    @include pxh-drawer-header__link--out-styles;
    @include pxh-animation(pxh-drawer-header__link--out);
  }
}

@include mq($from: md) {
  .pxh-drawer-header__link--wide\@md {
    @include pxh-drawer-header__link--in-styles;
    @include pxh-animation(pxh-drawer-header__link--in);
  }
}

@include mq($from: lg) {
  .pxh-drawer-header__link--wide\@lg {
    @include pxh-drawer-header__link--in-styles;
    @include pxh-animation(pxh-drawer-header__link--in);
  }
}

// chained to override px-theme
.pxh-drawer-header__link.pxh-drawer-header__link.pxh-drawer-header__link.pxh-drawer-header__link, 
.pxh-drawer-header__link:link.pxh-drawer-header__link:link.pxh-drawer-header__link:link, 
.pxh-drawer-header__link:visited.pxh-drawer-header__link:visited.pxh-drawer-header__link:visited,
.pxh-drawer-header__link:hover.pxh-drawer-header__link:hover.pxh-drawer-header__link:hover,
.pxh-drawer-header__link:active.pxh-drawer-header__link:active.pxh-drawer-header__link:active {
  color: $gray7;
}
