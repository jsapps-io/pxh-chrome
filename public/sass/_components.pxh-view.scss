/*------------------------------------*\
    #PXH-VIEW
\*------------------------------------*/

$pxh-view-header-height: $inuit-base-spacing-unit * 2 !default;
$pxh-drawer-toggle-margin: $inuit-base-spacing-unit * 0.75 !default;
$pxh-drawer-width-wide: $inuit-base-spacing-unit * 15 !default;
$pxh-drawer-width-narrow: $inuit-base-spacing-unit * 3 !default;
$pxh-drawer-toggle-margin: $inuit-base-spacing-unit * 0.75 !default;

.pxh-view {
  margin-top: $pxh-view-header-height + $pxh-drawer-toggle-margin;;
  transition: all 300ms ease-in-out;
}

// From the @md (tablet) breakpoint and wider,
// the view is displayed in its wide state, which accounts
// for the width of the narrow state of the drawer on the left.
@include mq($from: md) {
  .pxh-view--wide\@md {
    margin-left: $pxh-drawer-width-narrow;
    transition-delay: 300ms;
  }
}

// From the @lg (desktop) breakpoint and wider,
// add this class to display the view in its narrow state,
// which accounts for the width of the wide state of the drawer.
@include mq($from: lg) {
  .pxh-view--narrow\@lg {
    margin-left: $pxh-drawer-width-wide;
    transition-delay: 0ms;
  }
}

/*------------------------------------*\
    #PXH-VIEW-HEADER
\*------------------------------------*/

.pxh-view-header {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  border-bottom: 1px solid $gray6;
  height: $pxh-view-header-height + $pxh-drawer-toggle-margin;
  background-color: $white;
  transition: all 300ms ease-in-out;
  z-index: 250;
}

// From the @md (tablet) breakpoint and wider,
// the view header is displayed in its wide state, which accounts
// for the width of the narrow state of the drawer on the left.
@include mq($from: md) {
  .pxh-view-header--wide\@md {
    left: $pxh-drawer-width-narrow;
    transition-delay: 300ms;
  }
}

// From the @lg (desktop) breakpoint and wider,
// add this class to display the view header in its narrow state,
// which accounts for the width of the wide state of the drawer.
@include mq($from: lg) {
  .pxh-view-header--narrow\@lg {
    left: $pxh-drawer-width-wide;
    transition-delay: 0ms;
  }
}

.pxh-view-header__title {
  padding-top: $inuit-base-spacing-unit / 3;
  text-align: center;
  font-size: $inuit-base-font-size * 1.5;
}

.pxh-view-header__title-link.pxh-view-header__title-link.pxh-view-header__title-link  { // chained to override px-theme
  color: $black;
  text-decoration: none;
}

.pxh-view-header__title-link:link.pxh-view-header__title-link:link.pxh-view-header__title-link:link,
.pxh-view-header__title-link:visited.pxh-view-header__title-link:visited.pxh-view-header__title-link:visited { // chained to override px-theme
  color: $black;
}

/*------------------------------------*\
    #PXH-VIEW-HEADER-DRAWER-TOGGLE
\*------------------------------------*/

.pxh-view-header-drawer-toggle {
  position: fixed;
  top: $pxh-drawer-toggle-margin;
  left: $pxh-drawer-toggle-margin;
  opacity: 1;
  z-index: 500; // making the same as overlay to overcome IE10 clickthru bug with overlay
  transition: all 300ms ease-in-out;
}

// Hide the toggle button in the view-header. This class is
// used even though the drawer covers the view-header toggle
// button, because sometimes click events on the drawer toggle
// are intercepted by the view-header toggle as well, resulting
// in a bounce scenario.
.pxh-view-header-drawer-toggle--hidden {
  left: $pxh-drawer-width-narrow * -1;
  opacity: 0;  
}

// From the @md (tablet) breakpoint and wider, hide the
// toggle button in the view-header, as the toggle in the
// narrow left drawer is persistently displayed instead.
@include mq($from: md) {
  .pxh-view-header-drawer-toggle--hidden\@md {
      left: $pxh-drawer-width-narrow * -1;
      opacity: 0;
  }
}

.pxh-view-header-drawer-toggle__link {
  color: $black;
  text-decoration: none;
  &:link,
  &:visited {
    color: $black;
  }
}
