---
title: "pxh-drawer"
bodyClass: "pxh-chromeful"
errorSelected: false
---

    <section class="pxh-wrapper">
      <header class="pxh-view-header pxh-view-header--wide@md pxh-view-header--narrow@lg">
        <h1 class="pxh-view-header__title">
          <a href="index.html" class="pxh-view-header__title-link">
            Drawer, View &amp; View Header
          </a>
        </h1>
      </header>
      <section class="pxh-view pxh-view--wide@md pxh-view--narrow@lg" id="js-view">

        <div class="pxh-docs">



          <h2>pxh-drawer</h2>

          <h4>Show a narrow sidebar at tablet widths and above</h4>

          <p>To enable the persistent, narrow sidebar treatment at tablet-width breakpoints (approximately 768px) and above, locate the <code>pxh-navigation</code>-classed element and add the responsive modifier class <code>pxh-navigation--narrow@md</code> to it. This class should be hard-coded, and does not need to be toggled with Javascript.</p>

          <h4>Javascript:</h4>

          <p>When the user clicks <code>.pxh-drawer-toggle__link</code> or <code>.pxh-view-header-drawer-toggle__link</code>&hellip;</p>

          <ul>
            <li>Find <code>.pxh-drawer</code> and toggle the classes <code>pxh-drawer--hidden-until@md</code> and <code>pxh-drawer--narrow@md</code> on it.</li>
          </ul>
          
          <h4>Sass:</h4>

          <pre><code>// Set the default styles for the wide/active state of the drawer.
  .pxh-drawer {
    z-index: 1000;
    position: fixed;
    top: 0;
    left: 0;
    width: $pxh-drawer-width-wide;
    height: 100%;
    background-color: $pxh-drawer-bg-color;
    transition: all 500ms ease-out;
  }

  // Keep the inactive drawer hidden off-screen until the @md (tablet) breakpoint.
  @include mq($until: md) {
    .pxh-drawer--hidden-until\@md {
      left: ($pxh-drawer-width-wide * -1);
    }
  }

  // From the @md (tablet) breakpoint and wider,
  // the inactive drawer is displayed in its narrow state.
  // Remove this class to display the drawer in its wide state.
  @include mq($from: md) {
    .pxh-drawer--narrow\@md {
      width: $pxh-drawer-width-narrow;
    }
  }</code></pre>



          <h2>pxh-view and pxh-view-header</h2>

          <h4>Javascript:</h4>

          <p>When the user clicks <code>.pxh-drawer-toggle__link</code> or <code>.pxh-view-header-drawer-toggle__link</code>&hellip;</p>

          <ul>
            <li>Find <code>.pxh-view</code> and toggle the class <code>pxh-view--narrow@lg</code> on it</li>
            <li>Find <code>.pxh-view-header</code> and toggle the class <code>pxh-view-header--narrow@lg</code> on it</li>
            <li>Find <code>.pxh-view-header-drawer-toggle</code> and toggle the classes <code>pxh-view-header-drawer-toggle--hidden@md and pxh-view-header-drawer-toggle--hidden</code> on it</li>
          </ul>

          <h4>Sass:</h4>

          <pre><code>// From the @md (tablet) breakpoint and wider,
  // the view is displayed in its wide state, which accounts
  // for the width of the narrow state of the drawer on the left.
  @include mq($from: md) {
    .pxh-view--wide\@md {
      margin-left: $pxh-drawer-width-narrow;
    }
  }

  // From the @lg (desktop) breakpoint and wider,
  // add this class to display the view in its narrow state,
  // which acccounts for the width of the wide state of the drawer.
  @include mq($from: lg) {
    .pxh-view--narrow\@lg {
      margin-left: $pxh-drawer-width-wide;
    }
  }

  // From the @md (tablet) breakpoint and wider,
  // the view header is displayed in its wide state, which accounts
  // for the width of the narrow state of the drawer on the left.
  @include mq($from: md) {
    .pxh-view-header--wide\@md {
      left: $pxh-drawer-width-narrow;
    }
  }

  // From the @lg (desktop) breakpoint and wider,
  // add this class to display the view header in its narrow state,
  // which accounts for the width of the wide state of the drawer.
  @include mq($from: lg) {
    .pxh-view-header--narrow\@lg {
      left: $pxh-drawer-width-wide;
    }
  }

  // Hide the toggle button in the view-header. This class is
  // used even though the drawer covers the view-header toggle
  // button, because sometimes click events on the drawer toggle
  // are intercepted by the view-header toggle as well, resulting
  // in a bounce scenario.
  .pxh-view-header-drawer-toggle--hidden {
    left: $pxh-drawer-width-narrow * -1;
    opacity: 0;  
  }

  // From the @md (tablet) breakpoint and wider, hide the
  // toggle button in the view-header, as the toggle in the
  // narrow left drawer is persistently displayed instead.
  @include mq($from: md) {
    .pxh-view-header-drawer-toggle--hidden\@md {
        left: $pxh-drawer-width-narrow * -1;
        opacity: 0;
    }
  }</code></pre>



        </div>
      </section>
    </section>
